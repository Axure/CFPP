/*******************************************************************************
 * Copyright (c) 2014, Jean-David Gadina - www.xs-labs.com / www.digidna.net
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/*!
 * @file        Test-CFPP-Data.cpp
 * @copyright   (c) 2014 - Jean-David Gadina - www.xs-labs.com / www.digidna.net
 * @abstract    Unit tests for CF::Data
 */

#include <CF++.hpp>
#include <GoogleMock/GoogleMock.h>

using namespace testing;

TEST( CFPP_Data, CTOR )
{}

TEST( CFPP_Data, CTOR_CFType )
{}

TEST( CFPP_Data, CTOR_CFData )
{}

TEST( CFPP_Data, CTOR_CFString )
{}

TEST( CFPP_Data, CTOR_STDString )
{}

TEST( CFPP_Data, CTOR_BytePtr )
{}

TEST( CFPP_Data, CCTOR )
{}

#ifdef CFPP_HAS_CPP11
TEST( CFPP_Data, MCTOR )
{}
#endif

TEST( CFPP_Data, OperatorAssignData )
{}

TEST( CFPP_Data, OperatorAssignCFType )
{}

TEST( CFPP_Data, OperatorAssignCFData )
{}

TEST( CFPP_Data, OperatorAssignCFString )
{}

TEST( CFPP_Data, OperatorAssignSTDString )
{}

TEST( CFPP_Data, CastToBytePtr )
{}

TEST( CFPP_Data, CastToSTDString )
{}

TEST( CFPP_Data, OperatorSubscript )
{}

TEST( CFPP_Data, OperatorPlusEqualByte )
{}

TEST( CFPP_Data, OperatorPlusEqualCFString )
{}

TEST( CFPP_Data, OperatorPlusEqualCFData )
{}

TEST( CFPP_Data, OperatorPlusEqualSTDString )
{}

TEST( CFPP_Data, GetTypeID )
{}

TEST( CFPP_Data, GetCFObject )
{}

TEST( CFPP_Data, GetLength )
{}

TEST( CFPP_Data, SetLength )
{}

TEST( CFPP_Data, IncreaseLength )
{}

TEST( CFPP_Data, GetBytePtr )
{}

TEST( CFPP_Data, GetMutableBytePtr )
{}

TEST( CFPP_Data, GetBytes )
{}

TEST( CFPP_Data, AppendBytes )
{}

TEST( CFPP_Data, ReplaceBytes )
{}

TEST( CFPP_Data, DeleteBytes )
{}

TEST( CFPP_Data, Swap )
{}
